{"version":3,"sources":["data/videos sync /^/.//.*$","data/videos/corgi_demo.mp4","data/videos/pomsky_demo.mp4","redux/root-saga.js","redux/videos/videos.types.js","redux/videos/videos.data.js","redux/videos/videos.reducer.js","redux/annotation/annotation.types.js","redux/annotation/annotation.utils.js","redux/annotation/annotation.reducer.js","redux/annotation/annotation.data.js","redux/root-reducer.js","redux/store.js","redux/videos/videos.selectors.js","components/video-display/video-display.component.jsx","redux/videos/videos.actions.js","components/video-slider/video-slider.component.jsx","components/video-controller/video-controller.component.jsx","components/label-button/label-button.component.jsx","redux/annotation/annotation.actions.js","components/alert-button/alert-button.component.jsx","redux/annotation/annotation.selectors.js","components/label-buttons/label-buttons.component.jsx","components/annotation-item/annotation-item.component.jsx","components/annotations-list/annotations-list.component.jsx","components/annotation-tools/annotation-tools.components.jsx","pages/labelling/labelling.jsx","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","rootSaga","all","VideosActionTypes","SET_CURRENT_VIDEO","UPDATE_TIME","SET_CURRENT_VIDEO_ELEMENT","VIDEOS_LIST","name","totalFrames","duration","INITIAL_STATE","videosList","currentVideo","time","videoElement","videosReducer","state","action","type","payload","AnnotationActionTypes","ADD_ANNOTATION","CLEAR_ANNOTATIONS","DELETE_ANNOTATION","addAnnotation","annotations","newAnnotationDetails","label","frame","Math","round","newAnnotation","existingAnnotation","find","item","lastLabelled","data","newList","sort","a","b","deleteAnnotation","itemToRemove","filter","labels","annotationReducer","persistConfig","key","storage","whitelist","stateReconciler","autoMergeLevel2","rootReducer","combineReducers","videos","annotation","persistReducer","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","applyMiddleware","persistor","persistStore","run","selectVideos","selectVideosList","createSelector","selectCurrentVideo","selectFrameTime","selectCurrentVideoElement","VideoDisplay","props","React","createRef","this","setCurrentVideoElement","current","className","src","video","ref","Component","connect","dispatch","mapStateToProps","createStructuredSelector","callback","useState","value","setValue","useEffect","Slider","onChange","event","newValue","pause","onChangeCommitted","document","activeElement","blur","currentTime","VideoController","addListeners","element","addEventListener","handleTimeUpdate","onVideoEnd","handleKeyDown","removeListeners","removeEventListener","setState","playing","updateTime","changeTime","shift","max","min","preventDefault","canMove","frameTime","setTimeout","keyCode","console","log","togglePlaying","pauseVideo","playVideo","play","handleSliderChange","logCurrentState","paused","ended","alert","prevProps","Button","onClick","variant","color","AlertButton","open","setOpen","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","selectAnnotation","selectLabels","selectData","selectLastLabelled","clearAnnotations","Grid","container","justify","spacing","i","xs","lg","isTarget","style","willDelete","setToDelete","rendered","toggleRender","ListItem","ListItemText","primary","secondary","IconButton","edge","aria-label","parent","querySelector","target","scrollTop","offsetTop","renderRow","index","random","height","width","rowHeight","rowRenderer","rowCount","length","json","JSON","stringify","blob","Blob","href","URL","createObjectURL","link","createElement","download","fileName","body","appendChild","click","removeChild","AnnotationTools","direction","setCurrentVideo","details","videoIndex","require","alignItems","md","App","path","component","LabellingPage","Boolean","window","location","hostname","match","defineProperty","HTMLMediaElement","prototype","get","readyState","ReactDOM","render","purge","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e1f921d9.chunk.js","sourcesContent":["var map = {\n\t\"./corgi_demo.mp4\": 240,\n\t\"./pomsky_demo.mp4\": 241\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 239;","module.exports = __webpack_public_path__ + \"static/media/corgi_demo.1d358d7f.mp4\";","module.exports = __webpack_public_path__ + \"static/media/pomsky_demo.06c48d11.mp4\";","import { all } from 'redux-saga/effects';\n\nexport default function* rootSaga() {\n  yield all([\n\n  ]);\n}","const VideosActionTypes = {\n  SET_CURRENT_VIDEO: 'SET_CURRENT_VIDEO',\n  UPDATE_TIME: 'UPDATE_TIME',\n  SET_CURRENT_VIDEO_ELEMENT: 'SET_CURRENT_VIDEO_ELEMENT'\n}\n\nexport default VideosActionTypes;","const VIDEOS_LIST = [\n  {\n    name: 'corgi_demo.mp4',\n    totalFrames: 1801,\n    duration: 60.094\n  },\n  {\n    name: 'pomsky_demo.mp4',\n    totalFrames: 555,\n    duration: 23.151\n  }\n]\n\nexport default VIDEOS_LIST;","import VideosActionTypes from './videos.types';\nimport VIDEOS_LIST from './videos.data';\n\nconst INITIAL_STATE = {\n  videosList: VIDEOS_LIST,\n  currentVideo: {\n    ...VIDEOS_LIST[0],\n    time: 0\n  },\n  videoElement: null\n}\n\nconst videosReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case VideosActionTypes.SET_CURRENT_VIDEO:\n      return {\n        ...state,\n        currentVideo: action.payload\n      }\n    case VideosActionTypes.UPDATE_TIME:\n      return {\n        ...state,\n        currentVideo: {\n          ...state.currentVideo,\n          time: action.payload\n        }\n      }\n    case VideosActionTypes.SET_CURRENT_VIDEO_ELEMENT:\n      return {\n        ...state,\n        videoElement: action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport default videosReducer;","const AnnotationActionTypes = {\n  ADD_ANNOTATION: 'ADD_ANNOTATION',\n  CLEAR_ANNOTATIONS: 'CLEAR_ANNOTATIONS',\n  DELETE_ANNOTATION: 'DELETE_ANNOTATION'\n}\n\nexport default AnnotationActionTypes;","export const addAnnotation = (annotations, newAnnotationDetails) => {\n  const { label, currentVideo: { name, time, duration, totalFrames } } = newAnnotationDetails;\n\n  const frame = Math.round(time / duration * totalFrames);\n\n  const newAnnotation = {\n    label,\n    name,\n    frame\n  }\n\n  const existingAnnotation = annotations.find(item => ((item.name === name) && (item.label === label) && (item.frame === frame)));\n\n  if (existingAnnotation) {\n    return {\n      lastLabelled: existingAnnotation,\n      data: annotations\n    }\n  }\n\n  const newList = [...annotations, newAnnotation];\n  newList.sort((a, b) => b.frame - a.frame);\n\n  return {\n    lastLabelled: newAnnotation,\n    data: newList\n  }\n}\n\nexport const deleteAnnotation = (annotations, itemToRemove) => {\n  const { name, label, frame } = itemToRemove;\n\n  const newList = annotations.filter(item => {\n    return ((item.name !== name) || (item.label !== label) || (item.frame !== frame));\n  });\n\n  return newList;\n}","import { LABELS } from './annotation.data';\nimport AnnotationActionTypes from './annotation.types';\nimport { addAnnotation, deleteAnnotation } from './annotation.utils';\n// import { persistReducer } from 'redux-persist'\n// import storage from 'redux-persist/lib/storage';\n\nconst INITIAL_STATE = {\n  labels: LABELS,\n  data: [],\n  lastLabelled: null,\n}\n\n// const persistConfig = {\n//   key: 'annotations',\n//   storage,\n//   blacklist: ['labels']\n// }\n\nconst annotationReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case AnnotationActionTypes.ADD_ANNOTATION:\n      const { data, lastLabelled } = addAnnotation(state.data, action.payload);\n      return {\n        ...state,\n        data,\n        lastLabelled\n      }\n    case AnnotationActionTypes.CLEAR_ANNOTATIONS:\n      return {\n        ...state,\n        data: []\n      }\n    case AnnotationActionTypes.DELETE_ANNOTATION:\n      return {\n        ...state,\n        data: deleteAnnotation(state.data, action.payload)\n      }\n    default:\n      return state;\n  }\n}\n\n// export default persistReducer(persistConfig, annotationReducer);\nexport default annotationReducer;","export const LABELS = [\n  'cue 1',\n  'start 1',\n  'end 1',\n  'cue 2',\n  'start 2',\n  'end 2'\n];","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\n\nimport videosReducer from './videos/videos.reducer';\nimport annotationReducer from './annotation/annotation.reducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['annotation'],\n  stateReconciler: autoMergeLevel2\n};\n\nconst rootReducer = combineReducers({\n  videos: videosReducer,\n  annotation: annotationReducer\n});\n\nexport default persistReducer(persistConfig, rootReducer);","import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootSaga from './root-saga';\nimport rootReducer from './root-reducer';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);","import { createSelector } from 'reselect';\n\nconst selectVideos = state => state.videos;\n\nexport const selectVideosList = createSelector(\n  [selectVideos],\n  videos => videos.videosList\n);\n\nexport const selectCurrentVideo = createSelector(\n  [selectVideos],\n  videos => videos.currentVideo\n);\n\nexport const selectFrameTime = createSelector(\n  [selectCurrentVideo],\n  currentVideo => currentVideo.duration / currentVideo.totalFrames\n);\n\nexport const selectCurrentVideoElement = createSelector(\n  [selectVideos],\n  videos => videos.videoElement\n);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setCurrentVideoElement } from '../../redux/videos/videos.actions';\n\nimport './video-display.styles.scss';\n\nclass VideoDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.videoElement = React.createRef();\n  }\n\n  componentDidMount() {\n    this.props.setCurrentVideoElement(this.videoElement.current);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"video-display__video-container\">\n          <video src={this.props.video} ref={this.videoElement} id='video'></video>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentVideoElement: videoElement => dispatch(setCurrentVideoElement(videoElement))\n});\n\nexport default connect(null, mapDispatchToProps)(VideoDisplay);","import VideosActionTypes from './videos.types';\n\nexport const setCurrentVideo = details => ({\n  type: VideosActionTypes.SET_CURRENT_VIDEO,\n  payload: details\n});\n\nexport const updateTime = time => ({\n  type: VideosActionTypes.UPDATE_TIME,\n  payload: time\n});\n\nexport const setCurrentVideoElement = videoElement => ({\n  type: VideosActionTypes.SET_CURRENT_VIDEO_ELEMENT,\n  payload: videoElement\n});\n","import React, { useState, useEffect } from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect'\n\nimport { selectCurrentVideo } from '../../redux/videos/videos.selectors.js';\n\nimport './video-slider.styles.scss';\n\nconst VideoSlider = ({ videoElement, currentVideo, callback }) => {\n  const [value, setValue] = useState(0);\n\n  useEffect(() => {\n    setValue(currentVideo.time / currentVideo.duration * 100);\n  }, [currentVideo]);\n\n  const handleChange = (event, newValue) => {\n    videoElement.pause();\n    setValue(newValue);\n  }\n\n  const handleChangeCommitted = () => {\n    document.activeElement.blur();\n    videoElement.currentTime = value / 100 * currentVideo.duration;\n    callback();\n  }\n\n  return (\n    <div className=\"video-slider\">\n      <div>\n        <p className=\"frame-counter\">frame: {Math.round(value / 100 * currentVideo.totalFrames)}</p>\n      </div>\n      <Slider value={value} onChange={handleChange} onChangeCommitted={handleChangeCommitted} className=\"video-slider__slider\" />\n    </div>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentVideo: selectCurrentVideo\n});\n\nexport default connect(mapStateToProps)(VideoSlider);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport VideoSlider from '../video-slider/video-slider.component';\nimport { updateTime } from '../../redux/videos/videos.actions';\nimport { selectFrameTime, selectCurrentVideoElement } from '../../redux/videos/videos.selectors';\n\nimport './video-controller.styles.scss';\n\nclass VideoController extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canMove = true;\n\n    this.state = {\n      playing: false,\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.videoElement !== this.props.videoElement) {\n      if (prevProps.videoElement) {\n        this.removeListeners(prevProps.videoElement);\n      }\n      if (this.props.videoElement) {\n        this.addListeners(this.props.videoElement);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.videoElement) {\n      this.removeListeners(this.props.videoElement);\n    }\n  }\n\n  addListeners = element => {\n    element.addEventListener(\"timeupdate\", this.handleTimeUpdate, false);\n    element.addEventListener(\"ended\", this.onVideoEnd, false);\n    document.addEventListener(\"keydown\", this.handleKeyDown, false);\n  }\n\n  removeListeners = element => {\n    element.removeEventListener(\"timeupdate\", this.handleTimeUpdate, false);\n    element.removeEventListener(\"ended\", this.onVideoEnd, false);\n    document.removeEventListener(\"keydown\", this.handleKeyDown, false);\n  }\n\n  onVideoEnd = () => {\n    this.setState({\n      ...this.state,\n      playing: false\n    });\n  }\n\n  handleTimeUpdate = () => {\n    const { updateTime } = this.props;\n    updateTime(this.props.videoElement.currentTime);\n  }\n\n  changeTime = shift => {\n    if (shift < 0) {\n      this.props.videoElement.currentTime = Math.max(this.props.videoElement.currentTime + shift, 0);\n    } else {\n      this.props.videoElement.currentTime = Math.min(this.props.videoElement.currentTime + shift, this.props.videoElement.duration);\n    }\n  }\n\n  handleKeyDown = (event) => {\n    event.preventDefault();\n    document.activeElement.blur();\n    if (this.canMove) {\n\n      const { frameTime } = this.props;\n      this.canMove = false;\n      setTimeout(() => this.canMove = true, 100);\n\n      const { keyCode } = event;\n      console.log('keycode: ', keyCode);\n\n      switch (keyCode) {\n        case 32:\n        case 38:\n        case 40:\n          return this.togglePlaying();\n        case 37:\n          this.props.videoElement.currentTime = Math.max(this.props.videoElement.currentTime - frameTime, 0);\n          return;\n        case 39:\n          this.props.videoElement.currentTime = Math.min(this.props.videoElement.currentTime + frameTime, this.props.videoElement.duration);\n          return;\n        default:\n          return;\n      }\n    }\n  }\n\n  pauseVideo = () => {\n    this.props.videoElement.pause();\n    this.setState({\n      ...this.state,\n      playing: false\n    });\n  }\n\n  playVideo = () => {\n    this.props.videoElement.play();\n    this.setState({\n      ...this.state,\n      playing: true,\n    });\n  }\n\n  togglePlaying = () => {\n    if (this.props.videoElement.playing) {\n      this.pauseVideo();\n    } else {\n      this.playVideo();\n    }\n  }\n\n  handleSliderChange = () => {\n    if (this.state.playing) {\n      this.props.videoElement.play();\n    } else {\n      this.props.videoElement.pause();\n    }\n  }\n\n  logCurrentState = () => {\n    console.log('paused? ', this.props.videoElement.paused)\n    console.log('time: ', this.props.videoElement.currentTime)\n    console.log('has ended?: ', this.props.videoElement.ended)\n    console.log('playing?: ', this.props.videoElement.playing)\n    console.log('duration', this.props.videoElement.duration)\n    alert(`\n    paused: ${this.props.videoElement.paused}\n    time: ${this.props.videoElement.currentTime}\n    hasEnded: ${this.props.videoElement.ended}\n    playing: ${this.props.videoElement.playing}\n    duration: ${this.props.videoElement.duration}\n    `);\n  }\n\n  render() {\n    return (\n      <div>\n        {\n          this.props.videoElement ?\n            <div>\n              <div className=\"video-controller__controls\">\n                <Button onClick={this.logCurrentState} variant=\"contained\" className=\" video-controller__btn\" >Video Details</Button>\n                <Button onClick={() => this.changeTime(-this.props.frameTime * 10)} variant=\"contained\" className=\" video-controller__btn\" >Back</Button>\n                <Button onClick={this.togglePlaying} className=\"video-controller__play-button video-controller__btn\" variant=\"contained\">\n                  {\n                    this.state.playing ? <PauseIcon /> : <PlayArrowIcon />\n                  }\n                </Button>\n                <Button onClick={() => this.changeTime(this.props.frameTime * 10)} variant=\"contained\" className=\" video-controller__btn\" >Forward</Button>\n              </div>\n              <VideoSlider videoElement={this.props.videoElement} callback={this.handleSliderChange} />\n            </div>\n            : <h1>test</h1>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  frameTime: selectFrameTime,\n  videoElement: selectCurrentVideoElement\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateTime: time => dispatch(updateTime(time))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoController);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport { addAnnotation } from '../../redux/annotation/annotation.actions';\nimport { selectCurrentVideo } from '../../redux/videos/videos.selectors';\n\nconst LabelButton = ({ label, currentVideo, addAnnotation }) => {\n  const handleClick = () => {\n    addAnnotation(label, currentVideo);\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClick} variant=\"contained\" color=\"default\">{label}</Button>\n    </div>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentVideo: selectCurrentVideo\n})\n\nconst mapDispatchToProps = dispatch => ({\n  addAnnotation: (label, currentVideo) => dispatch(addAnnotation(label, currentVideo))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LabelButton);","import AnnotationActionTypes from './annotation.types';\n\nexport const addAnnotation = (label, currentVideo) => ({\n  type: AnnotationActionTypes.ADD_ANNOTATION,\n  payload: {\n    label,\n    currentVideo\n  }\n});\n\nexport const clearAnnotations = () => ({\n  type: AnnotationActionTypes.CLEAR_ANNOTATIONS,\n});\n\nexport const deleteAnnotation = (item) => ({\n  type: AnnotationActionTypes.DELETE_ANNOTATION,\n  payload: item\n});","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport './alert-button.styles.scss';\n\nconst AlertButton = ({ label, callback }) => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleContinue = () => {\n    handleClose();\n    callback();\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClickOpen} className=\"alert-button\" variant=\"contained\">\n        {label}\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to continue?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleContinue} color=\"primary\" autoFocus>\n            Continue\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default AlertButton;","import { createSelector } from 'reselect';\n\nconst selectAnnotation = state => state.annotation;\n\nexport const selectLabels = createSelector(\n  [selectAnnotation],\n  annotation => annotation.labels\n);\n\nexport const selectData = createSelector(\n  [selectAnnotation],\n  annotation => annotation.data\n);\n\nexport const selectLastLabelled = createSelector(\n  [selectAnnotation],\n  annotation => annotation.lastLabelled\n);","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport LabelButton from '../label-button/label-button.component';\nimport AlertButton from '../alert-button/alert-button.component';\n\nimport { selectLabels } from '../../redux/annotation/annotation.selectors';\nimport { clearAnnotations } from '../../redux/annotation/annotation.actions';\n\nimport './label-buttons.styles.scss';\n\nconst LabelButtons = ({ labels, clearAnnotations }) => {\n\n  return (\n    <div className=\"label-buttons-container\">\n      <Grid container justify=\"flex-start\" spacing={2}>\n        {\n          labels.map((label, i) => (\n            <Grid item xs={4} lg={3} key={i}>\n              <LabelButton label={label} />\n            </Grid>\n          ))\n        }\n        <Grid item xs={4} lg={3}>\n          <AlertButton callback={clearAnnotations} label={'Clear'} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  labels: selectLabels\n});\n\nconst mapDispatchToProps = dispatch => ({\n  clearAnnotations: () => dispatch(clearAnnotations())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LabelButtons);","import React, { useState, useEffect } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { connect } from 'react-redux';\n\nimport { deleteAnnotation } from '../../redux/annotation/annotation.actions';\n\nconst AnnotationItem = ({ annotation, isTarget, deleteAnnotation, style }) => {\n  const [willDelete, setToDelete] = useState(false);\n  const [rendered, toggleRender] = useState(false);\n\n  useEffect(() => {\n    toggleRender(true);\n    setTimeout(() => toggleRender(false), 500);\n  }, [annotation]);\n\n\n  const { label, frame } = annotation;\n\n  const handleClick = (event) => {\n    if (!willDelete) {\n      setToDelete(true);\n      setTimeout(() => {\n        deleteAnnotation(annotation);\n      }, 300);\n    }\n  }\n\n  return (\n    <div style={style} id={isTarget ? \"last-labelled\" : null} className={`annotations-list__item-container ${willDelete ? 'pending-deletion' : null} ${rendered ? 'animate' : null}`}>\n      <ListItem className={`annotations-list__item`}>\n        <ListItemText primary={label} secondary={`frame: ${frame}`} />\n        <IconButton onClick={handleClick} edge=\"end\" aria-label=\"delete\">\n          <DeleteIcon className=\"delete-button\" />\n        </IconButton>\n      </ListItem>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  deleteAnnotation: (item) => dispatch(deleteAnnotation(item))\n});\n\nexport default connect(null, mapDispatchToProps)(AnnotationItem);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { List, AutoSizer } from 'react-virtualized';\n\nimport AnnotationItem from '../annotation-item/annotation-item.component';\n\nimport { selectData, selectLastLabelled } from '../../redux/annotation/annotation.selectors';\n\nimport './annotations-list.styles.scss';\nimport { Button } from '@material-ui/core';\n\nconst AnnotationsList = ({ annotations, lastLabelled }) => {\n\n  useEffect(() => {\n    const parent = document.querySelector('.annotations-list');\n    const target = document.querySelector('#last-labelled');\n    if (target) {\n      parent.scrollTop = target.offsetTop - 20;\n    }\n  }, [lastLabelled]);\n\n  const isTarget = (annotation, target) => {\n    if (target) {\n      return (annotation.name === target.name && annotation.frame === target.frame && annotation.label === target.label);\n    }\n    return false;\n  }\n\n  const renderRow = ({ index, style }) => {\n    return <AnnotationItem key={Math.random()} style={style} annotation={annotations[index]} isTarget={isTarget(annotations[index], lastLabelled)} />\n  }\n\n  const saveData = () => {\n    const fileName = \"file\";\n    const json = JSON.stringify(annotations);\n    const blob = new Blob([json], { type: 'application/json' });\n    const href = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.download = fileName + \".json\";\n    document.body.appendChild(link);\n    link.href = href;\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  return (\n    <div>\n      <div className={'annotations-list'}>\n        <AutoSizer>\n          {({ height, width }) => (\n            <List\n              ref=\"List\"\n              height={height}\n              width={width}\n              rowHeight={64}\n              rowRenderer={renderRow}\n              rowCount={annotations.length}\n            />\n          )}\n        </AutoSizer>\n      </div>\n      <Button onClick={saveData}>Save Data</Button>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = createStructuredSelector({\n  annotations: selectData,\n  lastLabelled: selectLastLabelled\n});\n\nexport default connect(mapStateToProps)(AnnotationsList);","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport LabelButtons from '../label-buttons/label-buttons.component';\nimport AnnotationsList from '../annotations-list/annotations-list.component';\n\nconst AnnotationTools = () => {\n  return (\n    <div>\n      <Grid container direction=\"column\" justify=\"space-between\">\n        <Grid item xs={12}>\n          <AnnotationsList />\n        </Grid>\n        <Grid item xs={12}>\n          <LabelButtons />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default AnnotationTools;","import React, { useState } from 'react';\nimport './labelling.styles.scss';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectVideosList } from '../../redux/videos/videos.selectors';\nimport { setCurrentVideo } from '../../redux/videos/videos.actions';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport VideoDisplay from '../../components/video-display/video-display.component';\nimport VideoController from '../../components/video-controller/video-controller.component';\nimport AnnotationTools from '../../components/annotation-tools/annotation-tools.components';\n\nconst LabellingPage = ({ videosList, setCurrentVideo }) => {\n  const [videoIndex, setVideoIndex] = useState(0);\n\n  const handleClick = () => {\n    videoIndex === 0 ? setVideoIndex(Math.min(videosList.length, 1)) : setVideoIndex(0);\n    setCurrentVideo({\n      ...currentVideo,\n      time: 0\n    });\n  }\n\n  const currentVideo = videosList[videoIndex];\n  const video = require(`../../data/videos/${currentVideo.name}`)\n\n  return (\n    <div className=\"labelling-page\">\n      <Grid container spacing={3} alignItems=\"center\">\n        <Grid item xs={12} md={7} >\n          <VideoDisplay video={video} />\n          <div className=\"labelling-page__video-controller\">\n            <VideoController />\n          </div>\n          {/* <Button onClick={handleClick} variant=\"contained\">Swap Video</Button> */}\n        </Grid>\n        <Grid item xs={12} md={5}>\n          <AnnotationTools />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  videosList: selectVideosList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentVideo: details => dispatch(setCurrentVideo(details))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LabellingPage);","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nimport LabellingPage from './pages/labelling/labelling';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" component={LabellingPage} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport './sass/main.scss';\nimport './index.css';\nimport App from './App';\nimport Button from '@material-ui/core/Button';\nimport * as serviceWorker from './serviceWorker';\n\nObject.defineProperty(HTMLMediaElement.prototype, 'playing', {\n  get: function () {\n    return !!(this.currentTime > 0 && !this.paused && !this.ended && this.readyState > 2);\n  }\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <BrowserRouter>\n        <App />\n        <Button onClick={() => persistor.purge()} variant=\"contained\">Purge Persist</Button>\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}